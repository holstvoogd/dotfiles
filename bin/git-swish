#!/bin/bash

set -euo pipefail
IFS=$'\n\t'

REMOTE_BRANCH=$(git rev-parse --abbrev-ref origin/HEAD | sed 's|^origin/||')
INCLUDE_UNTRACKED=0

usage() {
    echo "Usage: git switch [-h] [-b base-branch] [-u] <branch-name>"
    echo "  -b <branch>   Base branch for new branches (default: $REMOTE_BRANCH)"
    echo "  -u            Include untracked files in stash"
    exit 1
}

check_git_installed() {
    if ! command -v git &> /dev/null; then
        echo "Error: git is not installed."
        exit 1
    fi
}

parse_arguments() {
    while [[ "$#" -gt 0 ]]; do
        case $1 in
            -h|--help) usage ;;
            -b) REMOTE_BRANCH="$2"; shift ;;
            -u) INCLUDE_UNTRACKED=1 ;;
            *) BRANCH_NAME="$1" ;;
        esac
        shift
    done

    if [ -z "${BRANCH_NAME:-}" ]; then
        usage
    fi
}

validate_branch_name() {
    if ! [[ $BRANCH_NAME =~ ^[0-9]+(-[a-zA-Z0-9]+)+$ || $BRANCH_NAME == $REMOTE_BRANCH ]]; then
        echo "Error: Branch name must match pattern: <number>-<word>[-<word>]"
        exit 1
    fi
}

stash_changes() {
    if [ -n "$(git status --porcelain)" ]; then
        git stash list | grep "branch_${CURRENT_BRANCH}" | cut -d: -f1 | xargs -I{} git stash drop {} || true

        if [ $INCLUDE_UNTRACKED -eq 1 ]; then
            git stash push -u -m "branch_${CURRENT_BRANCH}"
        else
            git stash push -m "branch_${CURRENT_BRANCH}"
        fi
    fi
}

switch_branch() {
    if git show-ref --quiet refs/heads/$BRANCH_NAME; then
        git checkout $BRANCH_NAME
    else
        git fetch origin $REMOTE_BRANCH
        git checkout origin/$REMOTE_BRANCH -b $BRANCH_NAME
        git push --set-upstream origin $BRANCH_NAME
    fi
}

pop_stash() {
    STASH_INDEX=$(git stash list | grep "branch_${BRANCH_NAME}" | cut -d: -f1)
    if [ -n "$STASH_INDEX" ]; then
        git stash pop "$STASH_INDEX"
    fi
}

main() {
    check_git_installed
    parse_arguments "$@"
    validate_branch_name

    CURRENT_BRANCH=$(git branch --show-current)
    stash_changes
    switch_branch
    pop_stash
}

main "$@"
