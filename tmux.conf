##################################################
## General key bindings
##################################################
# Screen like binding
# Prefix
unbind C-b
set -g prefix C-a
bind a send-prefix

# Last window & clear
unbind l
bind C-a last-window
bind C-l send-keys 'C-l'

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

##################################################
## panes / splits
##################################################
# Create splits and vertical splits
bind-key \ split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

# Smart pane switching with awareness of vim splits.
# Source: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Also allow arrow keys
bind-key -n "C-Left" if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n "C-Down" if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n "C-Up" if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n "C-Right" if-shell "$is_vim" "send-keys C-l" "select-pane -R"

##################################################
## window / tabs
##################################################
bind-key -n "C-t" new-window -c "#{pane_current_path}"
bind d kill-window
unbind d
bind z detach-client
#bind-key -n "C-w" kill-window
bind-key -n "S-Left"  select-window -t :-
bind-key -n "S-Right" select-window -t :+

# Bind function keys.
bind -n F1 select-window -t 1
bind -n F2 select-window -t 2
bind -n F3 select-window -t 3
bind -n F4 select-window -t 4
bind -n F5 select-window -t 5
bind -n F6 select-window -t 6
bind -n F7 select-window -t 7
bind -n F8 select-window -t 8
bind -n F9 select-window -t 9
bind -n F10 select-window -t 10
bind -n F11 select-window -t 11
bind -n F12 select-window -t 12

##################################################
## Copymode
##################################################
bind ` copy-mode
unbind [
unbind p
bind p paste-buffer
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy Escape cancel
bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"

##################################################
## Status bar
##################################################
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold
set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]'
set -g window-status-format "#[fg=colour235,bg=colour252,bold] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]#[fg=black,bg=colour39,noreverse,bold] #I: #W #[fg=colour39,bg=colour234,nobold]"

##################################################
## Other settings
##################################################
# Enable mouse support
set-option -g mouse-select-pane on
set-option -g mouse-resize-pane on
set-option -g mouse-select-window on
set-window-option -g mode-mouse on
set-option -g mouse-utf8 on

# Patch for OS X pbpaste and pbcopy under tmux.
set -g default-command "reattach-to-user-namespace -l zsh"

# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1

# automatically renumber window numbers on closing a pane (tmux >= 1.7)
set -g renumber-windows on

# No escape time for vi mode
set -sg escape-time 0

# dynamically update iTerm tab and window titles
set -g set-titles on

# needed as on tmux 1.9 and up (defaults to off)
# added in tmux commit c7a121cfc0137c907b7bfb
set -g focus-events on

# but don't change tmux's own window titles
set -w -g automatic-rename off

# #T      = standard window title (last command, see ~/.bash_profile)
# #h      = short hostname
# #S      = session name
# #W      = tmux window name
# (would love to include #(pwd) here as well, but that would only print the
# current working directory relative to the session -- ie. always the starting
# cwd -- which is not very interesting)
set -g set-titles-string "#T : #h > #S > #W"

# Bigger history
set -g history-limit 100000
